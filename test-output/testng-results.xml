<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="12111" started-at="2022-04-19T09:32:42 IST" finished-at="2022-04-19T09:32:54 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="12111" started-at="2022-04-19T09:32:42 IST" finished-at="2022-04-19T09:32:54 IST">
      <class name="test.TestClass">
        <test-method status="PASS" signature="setupSuite()[pri:0, instance:test.TestClass@670b40af]" name="setupSuite" is-config="true" duration-ms="128" started-at="2022-04-19T09:32:42 IST" finished-at="2022-04-19T09:32:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:test.TestClass@670b40af]" name="openBrowser" is-config="true" duration-ms="3092" started-at="2022-04-19T09:32:43 IST" finished-at="2022-04-19T09:32:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="loginWithDP(java.lang.String,java.lang.String)[pri:1, instance:test.TestClass@670b40af]" name="loginWithDP" duration-ms="620" started-at="2022-04-19T09:32:46 IST" data-provider="fetchFromexcel" finished-at="2022-04-19T09:32:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithDP -->
        <test-method status="PASS" signature="screenShot(org.testng.ITestResult)[pri:0, instance:test.TestClass@670b40af]" name="screenShot" is-config="true" duration-ms="935" started-at="2022-04-19T09:32:46 IST" finished-at="2022-04-19T09:32:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithDP status=SUCCESS method=TestClass.loginWithDP(java.lang.String,java.lang.String)[pri:1, instance:test.TestClass@670b40af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method status="PASS" signature="z_close()[pri:0, instance:test.TestClass@670b40af]" name="z_close" is-config="true" duration-ms="270" started-at="2022-04-19T09:32:47 IST" finished-at="2022-04-19T09:32:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- z_close -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:test.TestClass@670b40af]" name="openBrowser" is-config="true" duration-ms="2109" started-at="2022-04-19T09:32:48 IST" finished-at="2022-04-19T09:32:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="loginWithDP(java.lang.String,java.lang.String)[pri:1, instance:test.TestClass@670b40af]" name="loginWithDP" duration-ms="505" started-at="2022-04-19T09:32:50 IST" data-provider="fetchFromexcel" finished-at="2022-04-19T09:32:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithDP -->
        <test-method status="PASS" signature="screenShot(org.testng.ITestResult)[pri:0, instance:test.TestClass@670b40af]" name="screenShot" is-config="true" duration-ms="665" started-at="2022-04-19T09:32:50 IST" finished-at="2022-04-19T09:32:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithDP status=SUCCESS method=TestClass.loginWithDP(java.lang.String,java.lang.String)[pri:1, instance:test.TestClass@670b40af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method status="PASS" signature="z_close()[pri:0, instance:test.TestClass@670b40af]" name="z_close" is-config="true" duration-ms="202" started-at="2022-04-19T09:32:51 IST" finished-at="2022-04-19T09:32:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- z_close -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:test.TestClass@670b40af]" name="openBrowser" is-config="true" duration-ms="2187" started-at="2022-04-19T09:32:51 IST" finished-at="2022-04-19T09:32:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="FAIL" signature="loginWithDP(java.lang.String,java.lang.String)[pri:1, instance:test.TestClass@670b40af]" name="loginWithDP" duration-ms="356" started-at="2022-04-19T09:32:53 IST" data-provider="fetchFromexcel" finished-at="2022-04-19T09:32:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.saucedemo.com/inventory.html] but found [https://www.saucedemo.com/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.saucedemo.com/inventory.html] but found [https://www.saucedemo.com/]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at test.TestClass.loginWithDP(TestClass.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithDP -->
        <test-method status="PASS" signature="screenShot(org.testng.ITestResult)[pri:0, instance:test.TestClass@670b40af]" name="screenShot" is-config="true" duration-ms="258" started-at="2022-04-19T09:32:54 IST" finished-at="2022-04-19T09:32:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithDP status=FAILURE method=TestClass.loginWithDP(java.lang.String,java.lang.String)[pri:1, instance:test.TestClass@670b40af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method status="PASS" signature="z_close()[pri:0, instance:test.TestClass@670b40af]" name="z_close" is-config="true" duration-ms="243" started-at="2022-04-19T09:32:54 IST" finished-at="2022-04-19T09:32:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- z_close -->
      </class> <!-- test.TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
